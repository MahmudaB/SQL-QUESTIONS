
-- create
CREATE TABLE Worker (
	WORKER_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	FIRST_NAME CHAR(25),
	LAST_NAME CHAR(25),
	SALARY INT(15),
	JOINING_DATE DATETIME,
	DEPARTMENT CHAR(25)
);

INSERT INTO Worker 
	(WORKER_ID, FIRST_NAME, LAST_NAME, SALARY, JOINING_DATE, DEPARTMENT) VALUES
		(001, 'Monika', 'Arora', 100000, '14-02-20 09.00.00', 'HR'),
		(002, 'Niharika', 'Verma', 80000, '14-06-11 09.00.00', 'Admin'),
		(003, 'Vishal', 'Singhal', 300000, '14-02-20 09.00.00', 'HR'),
		(004, 'Amitabh', 'Singh', 500000, '14-02-20 09.00.00', 'Admin'),
		(005, 'Vivek', 'Bhati', 500000, '14-06-11 09.00.00', 'Admin'),
		(006, 'Vipul', 'Diwan', 200000, '14-06-11 09.00.00', 'Account'),
		(007, 'Satish', 'Kumar', 75000, '14-01-20 09.00.00', 'Account'),
		(008, 'Geetika', 'Chauhan', 90000, '14-04-11 09.00.00', 'Admin');

CREATE TABLE Bonus (
	WORKER_REF_ID INT,
	BONUS_AMOUNT INT(10),
	BONUS_DATE DATETIME,
	FOREIGN KEY (WORKER_REF_ID)
	REFERENCES Worker(WORKER_ID)
  ON DELETE CASCADE
);

INSERT INTO Bonus 
	(WORKER_REF_ID, BONUS_AMOUNT, BONUS_DATE) VALUES
		(001, 5000, '16-02-20'),
		(002, 3000, '16-06-11'),
		(003, 4000, '16-02-20'),
		(001, 4500, '16-02-20'),
		(002, 3500, '16-06-11');
        
CREATE TABLE Title (
	WORKER_REF_ID INT,
	WORKER_TITLE CHAR(25),
	AFFECTED_FROM DATETIME,
	FOREIGN KEY (WORKER_REF_ID)
	REFERENCES Worker(WORKER_ID)
  ON DELETE CASCADE
);

INSERT INTO Title 
	(WORKER_REF_ID, WORKER_TITLE, AFFECTED_FROM) VALUES
 (001, 'Manager', '2016-02-20 00:00:00'),
 (002, 'Executive', '2016-06-11 00:00:00'),
 (008, 'Executive', '2016-06-11 00:00:00'),
 (005, 'Manager', '2016-06-11 00:00:00'),
 (004, 'Asst. Manager', '2016-06-11 00:00:00'),
 (007, 'Executive', '2016-06-11 00:00:00'),
 (006, 'Lead', '2016-06-11 00:00:00'),
 (003, 'Lead', '2016-06-11 00:00:00');


 
 -- Q1
SELECT UPPER(FIRST_NAME) AS WORKER_NAME FROM Worker;

-- Q2
SELECT DISTINCT DEPARTMENT FROM Worker;

-- Q3
SELECT SUBSTRING(FIRST_NAME,1,3) FROM Worker;

-- Q4
SELECT INSTR(FIRST_NAME,'B') FROM Worker where FIRST_NAME='Amitabh';

-- Q5
SELECT RTRIM(FIRST_NAME) FROM Worker;

-- Q6
SELECT DISTINCT DEPARTMENT, LENGTH(DEPARTMENT) FROM Worker;

-- Q7
SELECT REPLACE(FIRST_NAME,'a','A') FROM Worker;

-- Q8
SELECT CONCAT(FIRST_NAME,' ',LAST_NAME) AS COMPLETE_NAME FROM Worker;

-- Q9
SELECT* FROM Worker ORDER BY FIRST_NAME ASC, DEPARTMENT DESC;

-- Q10
SELECT * FROM Worker WHERE FIRST_NAME IN ('Vipul','Satish');



-- Q11
select * FROM Worker where FIRST_NAME NOT IN ('Vipul','Satish');

-- Q12
select * FROM Worker WHERE DEPARTMENT LIKE 'Admin%';

-- Q13
select * FROM Worker WHERE FIRST_NAME LIKE '%a%';

-- Q14
select * FROM Worker WHERE FIRST_NAME LIKE '%a';

-- Q15
select * FROM Worker WHERE FIRST_NAME LIKE '_____h';

-- Q16
select * FROM Worker WHERE SALARY BETWEEN 100000 AND 500000;

-- Q17
select * FROM Worker WHERE YEAR(JOINING_DATE)=2014 AND MONTH(JOINING_DATE)=02;

-- Q18
select DEPARTMENT,COUNT(DEPARTMENT) FROM Worker WHERE DEPARTMENT='Admin';

-- Q19
select CONCAT(FIRST_NAME,' ',LAST_NAME) AS FULL_NAME FROM Worker
WHERE SALARY BETWEEN 50000 AND 100000;



-- Q20
SELECT DEPARTMENT,COUNT(WORKER_ID) AS NUMBER_OF_WORKER FROM Worker 
GROUP BY DEPARTMENT ORDER BY NUMBER_OF_WORKER DESC;

-- Q21
SELECT W.* FROM Worker AS W INNER JOIN Title AS T 
ON W.WORKER_ID=WORKER_REF_ID WHERE WORKER_TITLE='Manager';

-- USING SUBQUERIES
SELECT W.* FROM Worker AS W WHERE WORKER_ID IN (
  SELECT WORKER_REF_ID FROM Title WHERE WORKER_TITLE='Manager'
);

-- Q22
SELECT WORKER_TITLE, COUNT(WORKER_TITLE) AS NUMBER_OF_WORKER FROM Title 
GROUP BY WORKER_TITLE HAVING NUMBER_OF_WORKER>1; 

-- Q23
SELECT * FROM Worker WHERE WORKER_ID%2!=0;

-- Q24
SELECT * FROM Worker WHERE MOD(WORKER_ID,2)=0;

-- Q25
CREATE TABLE WORKER_CLONE LIKE Worker;  -- TABLE LIKE ANOTHER TABLE
INSERT INTO WORKER_CLONE SELECT* FROM Worker;

-- Q26(INTERSECT)
SELECT W.* FROM Worker AS W INNER JOIN WORKER_CLONE AS WC 
USING(WORKER_ID);

-- Q27(MINUS)
SELECT W.* FROM Worker AS W LEFT JOIN Bonus AS B
ON W.WORKER_ID=B.WORKER_REF_ID WHERE B.WORKER_REF_ID IS NULL;

-- Q28
SELECT CURDATE();
SELECT NOW();

-- Q29
SELECT * FROM Worker ORDER BY SALARY DESC LIMIT 5;

-- Q30
SELECT SALARY FROM Worker ORDER BY SALARY DESC LIMIT 4,2;


 
-- Q31
select SALARY FROM Worker w1 WHERE 4 = (
   select COUNT(DISTINCT(SALARY)) FROM Worker w2
   WHERE w1.SALARY<=w2.SALARY
);

-- Q32
select * FROM Worker WHERE SALARY IN (
SELECT SALARY FROM Worker group BY SALARY having COUNT(SALARY)>1);

-- ANOTHER WAY
SELECT W1.* FROM Worker W1 , Worker W2 
WHERE W1.SALARY=W2.SALARY AND W1.WORKER_ID!=W2.WORKER_ID;

-- Q33
SELECT DISTINCT(SALARY) FROM Worker ORDER BY SALARY DESC LIMIT 1,1;

-- ANOTHER WAY
SELECT SALARY FROM Worker W1 WHERE 2 = (
 SELECT COUNT(DISTINCT(SALARY)) FROM Worker W2 WHERE W1.SALARY<=W2.SALARY
);

-- Q34
SELECT * FROM Worker
union ALL
SELECT * FROM Worker ORDER BY WORKER_ID;

-- Q35
SELECT W.WORKER_ID FROM Worker W LEFT JOIN Bonus B
ON W.WORKER_ID=B.WORKER_REF_ID WHERE B.WORKER_REF_ID IS NULL;

-- ANOTHER WAY
SELECT WORKER_ID FROM WORKER WHERE WORKER_ID NOT IN (
  SELECT WORKER_REF_ID FROM Bonus
);


-- Q36
SELECT * FROM Worker WHERE WORKER_ID <= (
SELECT COUNT(WORKER_ID)/2 FROM Worker);

-- Q37
SELECT DEPARTMENT FROM Worker group BY DEPARTMENT having COUNT(DEPARTMENT)<4;

-- Q38
SELECT DEPARTMENT, COUNT(DEPARTMENT) FROM Worker group BY DEPARTMENT;

-- Q39
SELECT * FROM Worker ORDER BY WORKER_ID DESC LIMIT 1;

-- ANOTHER WAY
SELECT * FROM Worker WHERE WORKER_ID = (SELECT MAX(WORKER_ID) FROM Worker);

-- Q40
SELECT * FROM Worker LIMIT 1;

-- ANOTHER WAY
SELECT * FROM Worker WHERE WORKER_ID = (SELECT MIN(WORKER_ID) FROM Worker);


-- Q41
select * FROM Worker WHERE WORKER_ID> (
select COUNT(WORKER_ID)-5 FROM Worker
);

-- ANOTHER WAY
(select * FROM Worker ORDER BY WORKER_ID DESC LIMIT 5) ORDER BY WORKER_ID;

-- Q42
select * FROM Worker WHERE SALARY IN (
select MAX(SALARY) FROM Worker group BY DEPARTMENT);

-- Q43
select DISTINCT(SALARY) FROM Worker ORDER BY SALARY DESC LIMIT 3; 

-- ANOTHER WAY
select DISTINCT(SALARY) FROM Worker W1 WHERE 3>= (
select COUNT(DISTINCT(SALARY)) FROM Worker W2
WHERE W1.SALARY<=W2.SALARY
) ORDER BY W1.SALARY DESC;

-- Q44
select DISTINCT(SALARY) FROM Worker ORDER BY SALARY LIMIT 3; 

-- ANOTHER WAY
select DISTINCT(SALARY) FROM Worker W1 WHERE 3>= (
select COUNT(DISTINCT(SALARY)) FROM Worker W2
WHERE W1.SALARY>=W2.SALARY
) ORDER BY W1.SALARY;

-- Q45
select SALARY FROM Worker W1 WHERE 5= (
select COUNT(DISTINCT(SALARY)) FROM Worker W2
WHERE W1.SALARY<=W2.SALARY
);

-- Q46
select DEPARTMENT, SUM(SALARY) AS TOTAL_SALARY FROM Worker group BY DEPARTMENT;

-- Q47
select CONCAT(FIRST_NAME,' ',LAST_NAME) FROM Worker WHERE SALARY =
(select MAX(SALARY) FROM Worker);